Java注解的使用
	Java注解按照运行的机制分为三种类型的注解
	（1）源码注解：注解只在源码中存在，编译成.class文件就不存在了
	（2）编译时注解：注解在源码和.class文件中都存在
	（3）运行时注解：在运行阶段还起作用，甚至会影响运行逻辑的注解
	Java注解按照来源分类
	（1）来自JDK的注解
	（2）来自第三方的注解
	（3）自定义的注解
	自定义注解的语法要求
	（1）使用@Interface关键字定义注解
	（2）成员以无参无异常方式声明
	（3）可以用default为成员指定一个默认值
	成员类型是受限的，合法的类型包括原始类型以及String,Class,Annotation,Enumeration；如果注解只有一个成员，则成员名必须取名为value()，在使用时可以忽略成员名和赋值号(=)；注解类可以没有成员，没有成员的注解称为标识注解。
	元注解
	（1）@Target指定注解的使用范围：CONSTRUCTOR(构造方法声明), FIELD(字段声明), LOCAL_VARIABLE(局部变量声明), METHOD(方法声明), PACKAGE(包声明), PARAMETER(参数声明), TYPE(类和接口)。
	（2）@Retention指定生命周期：SOURCE(只在源码显示，编译时丢弃), CLASS(编译时会记录到class中，运行时忽略), RUNTIME(运行时存在，可以通过反射读取)。
	（3）@Inherited指定子类是否可以继承父类的注解[实际上，类上的注解看、是可以被继承的，但是方法上的注解的继承有一点特殊，如果子类没有重写父类标识注解的方法，那么子类就可以继承父类的注解，反之则不可以]
	（4）@Documented指定生成javadoc时会包含注解
